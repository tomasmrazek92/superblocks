{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/uiblocks.js"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "window.fsAttributes = window.fsAttributes || [];\n\n// FS Filter\nwindow.fsAttributes.push([\n  'cmsfilter',\n  (filterInstances) => {\n    // The callback passes a `filterInstances` array with all the `CMSFilters` instances on the page.\n    const [filterInstance] = filterInstances;\n    console.log(filterInstance);\n\n    // The `renderitems` event runs whenever the list renders items after filtering.\n    filterInstance.listInstance.on('renderitems', function () {\n      let entries = filterInstance.filtersData[0].values.size;\n      if (entries >= 1) {\n        // If filters are active, execute this block\n        $('.uiblocks_wrap.cc-index').hide();\n        $('.uiblocks_wrap.cc-all').fadeIn();\n      } else {\n        // If no filters are active, execute this block\n        $('.uiblocks_wrap.cc-index').fadeIn();\n        $('.uiblocks_wrap.cc-all').hide();\n      }\n    });\n  },\n]);\n\n$(document).ready(function () {\n  // Select all items within the .uiblocks_wrap.cc-all container\n  const $items = $('.uiblocks_wrap.cc-all [fs-cmsfilter-field=\"category\"]');\n\n  // Create a Map to store the count of each category\n  const categoryMap = new Map();\n\n  // Count the occurrences of each category\n  $items.each(function () {\n    const category = $(this).text().trim(); // Get the category text\n    if (category) {\n      categoryMap.set(category, (categoryMap.get(category) || 0) + 1);\n    }\n  });\n\n  // Update text for matching elements based on the category map\n  categoryMap.forEach((count, category) => {\n    const $match = $(`[total-count=\"${category}\"]`);\n    if ($match.length) {\n      $match.text(count); // Update the text with the count value\n    }\n  });\n\n  console.log('Updated text for matching elements:', Object.fromEntries(categoryMap));\n});\n"],
  "mappings": ";;;AAAA,MAAI,YAAY,GAAG,iCAAsB,EAAE,iBAAiB,UAAU,MAAM,SAAS,OAAO,CAAC;;;ACA7F,SAAO,eAAe,OAAO,gBAAgB,CAAC;AAG9C,SAAO,aAAa,KAAK;AAAA,IACvB;AAAA,IACA,CAAC,oBAAoB;AAEnB,YAAM,CAAC,cAAc,IAAI;AACzB,cAAQ,IAAI,cAAc;AAG1B,qBAAe,aAAa,GAAG,eAAe,WAAY;AACxD,YAAI,UAAU,eAAe,YAAY,CAAC,EAAE,OAAO;AACnD,YAAI,WAAW,GAAG;AAEhB,YAAE,yBAAyB,EAAE,KAAK;AAClC,YAAE,uBAAuB,EAAE,OAAO;AAAA,QACpC,OAAO;AAEL,YAAE,yBAAyB,EAAE,OAAO;AACpC,YAAE,uBAAuB,EAAE,KAAK;AAAA,QAClC;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF,CAAC;AAED,IAAE,QAAQ,EAAE,MAAM,WAAY;AAE5B,UAAM,SAAS,EAAE,uDAAuD;AAGxE,UAAM,cAAc,oBAAI,IAAI;AAG5B,WAAO,KAAK,WAAY;AACtB,YAAM,WAAW,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK;AACrC,UAAI,UAAU;AACZ,oBAAY,IAAI,WAAW,YAAY,IAAI,QAAQ,KAAK,KAAK,CAAC;AAAA,MAChE;AAAA,IACF,CAAC;AAGD,gBAAY,QAAQ,CAAC,OAAO,aAAa;AACvC,YAAM,SAAS,EAAE,iBAAiB,YAAY;AAC9C,UAAI,OAAO,QAAQ;AACjB,eAAO,KAAK,KAAK;AAAA,MACnB;AAAA,IACF,CAAC;AAED,YAAQ,IAAI,uCAAuC,OAAO,YAAY,WAAW,CAAC;AAAA,EACpF,CAAC;",
  "names": []
}
